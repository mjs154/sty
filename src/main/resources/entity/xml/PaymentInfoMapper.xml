<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mjs.study.entity.mapper.PaymentInfoMapper" >
  <resultMap id="BaseResultMap" type="com.mjs.study.entity.pojo.PaymentInfo" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="AcceptId" property="acceptid" jdbcType="VARCHAR" />
    <result column="TransNo" property="transno" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="CreatTime" property="creattime" jdbcType="VARCHAR" />
    <result column="Extend" property="extend" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, AcceptId, TransNo, Status, CreatTime, Extend
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mjs.study.entity.pojo.PaymentInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from payment_info
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from payment_info
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mjs.study.entity.pojo.PaymentInfoExample" >
    delete from payment_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mjs.study.entity.pojo.PaymentInfo" >
    insert into payment_info (Id, AcceptId, TransNo, 
      Status, CreatTime, Extend
      )
    values (#{id,jdbcType=INTEGER}, #{acceptid,jdbcType=VARCHAR}, #{transno,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{creattime,jdbcType=VARCHAR}, #{extend,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mjs.study.entity.pojo.PaymentInfo" >
    insert into payment_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="acceptid != null" >
        AcceptId,
      </if>
      <if test="transno != null" >
        TransNo,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="creattime != null" >
        CreatTime,
      </if>
      <if test="extend != null" >
        Extend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="acceptid != null" >
        #{acceptid,jdbcType=VARCHAR},
      </if>
      <if test="transno != null" >
        #{transno,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=VARCHAR},
      </if>
      <if test="extend != null" >
        #{extend,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mjs.study.entity.pojo.PaymentInfoExample" resultType="java.lang.Integer" >
    select count(*) from payment_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update payment_info
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.acceptid != null" >
        AcceptId = #{record.acceptid,jdbcType=VARCHAR},
      </if>
      <if test="record.transno != null" >
        TransNo = #{record.transno,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creattime != null" >
        CreatTime = #{record.creattime,jdbcType=VARCHAR},
      </if>
      <if test="record.extend != null" >
        Extend = #{record.extend,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update payment_info
    set Id = #{record.id,jdbcType=INTEGER},
      AcceptId = #{record.acceptid,jdbcType=VARCHAR},
      TransNo = #{record.transno,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=INTEGER},
      CreatTime = #{record.creattime,jdbcType=VARCHAR},
      Extend = #{record.extend,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjs.study.entity.pojo.PaymentInfo" >
    update payment_info
    <set >
      <if test="acceptid != null" >
        AcceptId = #{acceptid,jdbcType=VARCHAR},
      </if>
      <if test="transno != null" >
        TransNo = #{transno,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        CreatTime = #{creattime,jdbcType=VARCHAR},
      </if>
      <if test="extend != null" >
        Extend = #{extend,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjs.study.entity.pojo.PaymentInfo" >
    update payment_info
    set AcceptId = #{acceptid,jdbcType=VARCHAR},
      TransNo = #{transno,jdbcType=VARCHAR},
      Status = #{status,jdbcType=INTEGER},
      CreatTime = #{creattime,jdbcType=VARCHAR},
      Extend = #{extend,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>